name: Flask Application CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip==23.1.2
          pip install setuptools==65.5.0 wheel==0.38.4
          pip install "protobuf<3.20" --force-reinstall

      - name: Install project dependencies (separately)
        run: |
          pip install flask==2.2.3
          pip install gunicorn==20.1.0
          pip install requests==2.28.2
          pip install flask-bootstrap==3.3.7.1
          pip install flask-wtf==1.0.0
          pip install pillow==9.4.0
          pip install "tensorflow==2.10.1"
          pip install "keras==2.10.0"
          pip install lxml==4.9.2

      - name: Verify installations
        run: |
          pip list
          python -c "import tensorflow as tf; print('TF:', tf.__version__)"
          python -c "import keras; print('Keras:', keras.__version__)"

      - name: Make scripts executable
        run: chmod +x ./flaskapp/st.sh

      - name: Run integration tests
        working-directory: ./flaskapp
        env:
          PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
        run: |
          ./st.sh > test_output.log 2>&1 || TEST_FAILED=$?
          cat test_output.log
          [ -z "${TEST_FAILED}" ] || exit $TEST_FAILED

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-logs
          path: |
            flaskapp/test_output.log
            flaskapp/gunicorn*.log